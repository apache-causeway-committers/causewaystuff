// Auto-generated by Causeway-Stuff code generator.
package reporter.dom;

import jakarta.inject.Named;
import java.lang.String;
import java.math.BigDecimal;
import javax.annotation.processing.Generated;
import lombok.Getter;
import lombok.Setter;
import org.apache.causeway.applib.annotation.DomainObject;
import org.apache.causeway.applib.annotation.DomainObjectLayout;
import org.apache.causeway.applib.annotation.Editing;
import org.apache.causeway.applib.annotation.ObjectSupport;
import org.apache.causeway.applib.annotation.Optionality;
import org.apache.causeway.applib.annotation.Property;
import org.apache.causeway.applib.annotation.PropertyLayout;
import org.apache.causeway.applib.annotation.Where;

/**
 * has no description
 */
@Generated("io.github.causewaystuff.companion.codegen.domgen._GenViewmodel")
@Named("reporter.dom.ConsumptionClass")
@DomainObject
@DomainObjectLayout(
        describedAs = "has no description"
)
public class ConsumptionClass {
    /**
     * sequential
     * respondent
     * index
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "1",
            describedAs = "sequential\n"
                            + "respondent\n"
                            + "index",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private int respondentOrdinal;

    /**
     * anonymized
     * respondent identifier,
     * unique to the
     * corresponding survey
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "2",
            describedAs = "anonymized\n"
                            + "respondent identifier,\n"
                            + "unique to the\n"
                            + "corresponding survey",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private String respondentAlias;

    /**
     * respondent's
     * n-th interview
     * (chronological)
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "3",
            describedAs = "respondent's\n"
                            + "n-th interview\n"
                            + "(chronological)",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private int interviewOrdinal;

    /**
     * food
     * consumption
     * occasion
     * code
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "4",
            describedAs = "food\n"
                            + "consumption\n"
                            + "occasion\n"
                            + "code",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private String fco;

    /**
     * meal happened
     * when and where
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "5",
            describedAs = "meal happened\n"
                            + "when and where",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private String meal;

    /**
     * w.i.p.
     */
    @Property(
            optionality = Optionality.MANDATORY,
            editing = Editing.ENABLED
    )
    @PropertyLayout(
            fieldSetId = "details",
            sequence = "6",
            describedAs = "w.i.p.",
            hidden = Where.NOWHERE
    )
    @Getter
    @Setter
    private BigDecimal value;

    @ObjectSupport
    public String title() {
        return this.toString();
    }
}
